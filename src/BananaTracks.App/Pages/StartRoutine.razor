@page "/routines/{RoutineId}/start"
@inherits AppComponentBase

<PageTitle>Run Routine</PageTitle>

<h1>Run Routine</h1>

<Loading IsLoading="_routine is null">
	@switch (_runStatus)
	{
		case RunStatus.IsPending:
		default:
			<p><button type="button" @onclick="StartTimer" class="btn btn-primary">Start</button></p>
			break;
		case RunStatus.IsRunning:
			<p><button type="button" class="btn btn-secondary">Pause</button></p>
			break;
		case RunStatus.IsDone:
			<p><button type="button" @onclick="StartTimer" class="btn btn-primary">Start</button></p>
			break;
	}
	@foreach (var activity in _activities)
	{
		<div class="@(activity.Status is ActivityStatus.IsRunning or ActivityStatus.IsBreaking ? "card card-active" : "card")">
			<div class="card-body">
				@activity.Activity.Name
				@if (!string.IsNullOrWhiteSpace(activity.Activity.AudioUrl))
				{
					<audio id="audio-@activity.Activity.ActivityId" src="@activity.Activity.AudioUrl"></audio>
				}
			</div>
			<div class="card-footer text-muted">
				@switch (activity.Status)
				{
					case ActivityStatus.IsPending:
						<span>
							<i class="fa-regular fa-square"></i>
							@DisplayTime(activity.DurationRemaining) (pending)
						</span>
						break;
					case ActivityStatus.IsRunning:
						<span>
							<i class="fa-solid fa-timer"></i>
							@DisplayTime(activity.DurationRemaining) (running)
						</span>
						break;
					case ActivityStatus.IsBreaking:
						<span>
							<i class="fa-solid fa-timer"></i>
							@DisplayTime(activity.BreakRemaining) (break)
						</span>
						break;
					case ActivityStatus.IsDone:
						<span>
							<i class="fa-solid fa-square-check"></i>
							done
						</span>
						
						break;
				}
			</div>
		</div>
	}
</Loading>

<audio id="dingAudio" src="https://cdn.bananatracks.com/audio/service-bell-ring.mp3"></audio>
